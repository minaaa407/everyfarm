<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.everyfarm.farmer.FarmerDAO">

	<select id="flist"
		resultType="kr.co.everyfarm.farmer.FarmerBean">
		select * from farmer
	</select>

	<insert id="fjoin"
		parameterType="kr.co.everyfarm.farmer.FarmerBean">insert into farmer (f_id,f_name, f_pw, f_Addr,
		f_tel,f_birth, f_auth, f_sign)Values (#{f_Id}, #{f_Name},
		#{f_Pw},#{f_Addr},#{f_Tel}, #{f_Birth}, #{f_Auth}, #{f_Sign})
	</insert>

	<select id="flogin"
		resultType="kr.co.everyfarm.farmer.FarmerBean">
		select * from farmer where f_id =
		#{f_Id} and f_pw = #{f_Pw}
	</select>

	<select id="fInfo"
		resultType="kr.co.everyfarm.farmer.FarmerBean">
		select * from member where
		f_id=#{f_Id}
	</select>

	<update id="fUpdate">
		update farmer set
		f_Pw=#{f_Pw},
		f_Name=#{f_Name},
		f_Addr=#{f_Addr},
		f_tel=#{f_Tel},
		f_birth=#{f_Birth},
		f_auth=#{f_Auth},
		where f_id=#{f_Id}
	</update>

	<delete id="fDelete">
		delete from farmer where f_id=#{f_Id}
	</delete>
	
	<update id="fDel" parameterType="java.util.List">
		UPDATE farmer SET
		f_Id = '탈퇴한 농부입니다',
		f_Pw = '탈퇴한 농부입니다',
		f_Name = '탈퇴한 농부입니다',
		f_Addr = '탈퇴한 농부입니다',
		f_Rate = 0.0,
		f_tel = '탈퇴한 농부입니다',
		f_Birth = '탈퇴한 농부입니다',
		f_auth = '탈퇴한 농부입니다',
		f_sign = 'N',
		f_Date = sysdate() WHERE f_id IN (
		<foreach collection="list" item="delete" index="index"
			separator=",">
			'${delete}'
		</foreach>
		)
	</update>

	<select id="checkId" resultType="int">
		select count(*) from farmer
		where f_Id = #{f_Id}
	</select>

	<select id="mailNumber" resultType="int">
		select * from email
		where e_Id
		= #{e_Id} and e_Num = #{e_Num} order by e_Date desc limit 1
	</select>

	<insert id="mail">
		insert into email(e_Id, e_num)
		values (#{e_Id},
		#{e_Num})
	</insert>

	<update id="upPw">
		update farmer set f_Pw = #{f_Pw} where f_Id = #{f_Id}
	</update>

	<select id="findId"
		resultType="kr.co.everyfarm.farmer.FarmerBean">
		select * from farmer where
		f_name=#{f_Name} and
		f_tel=#{f_Tel}
	</select>

	<select id="findPw"
		resultType="kr.co.everyfarm.farmer.FarmerBean">
		select * from farmer where
		f_id=#{f_Id} and f_name=#{f_Name}
		and f_tel=#{f_Tel}
	</select>

	<select id="bestFarmer"
		resultType="kr.co.everyfarm.farmer.FarmerBean">
		SELECT * FROM farmer order by f_Rate desc limit 3;
	</select>

	<insert id="farmerAdd"
		parameterType="kr.co.everyfarm.farmer.FarmerBean">
		insert into farmer (f_id,
		f_name, f_pw, f_Addr, f_tel,
		f_birth, f_auth, f_sign)
		Values (#{f_Id}, #{f_Name}, #{f_Pw},
		'TEST',
		'TEST', 'TEST', 'TEST', 'Y')
	</insert>

	<select id="myCustomer"
		resultType="kr.co.everyfarm.payment.PaymentBean">
		SELECT * FROM payment WHERE pay_No in (select p_no from
		product where p_id =#{f_Id}) ORDER BY pay_orderno
	</select>

	<update id="myRate" parameterType="Map">UPDATE farmer SET f_Rate
		=f_Rate + #{rev_Rate} WHERE f_Id = (SELECT p_Id FROM product
		WHERE
		p_No=#{pay_No})

	</update>

	<sql id="pageSearch1">
		<trim prefix="and(" suffix=")" prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							pay_Id like concat ('%',#{keyword},'%')
						</when>
						<when test="type == 'C'.toString()">
							pay_Orderno like concat ('%',#{keyword},'%')
						</when>
						<when test="type == 'W'.toString()">
							pay_Seed like concat ('%',#{keyword},'%')
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<select id="paging"
		resultType="kr.co.everyfarm.payment.PaymentBean">
		SELECT * FROM payment WHERE pay_no in (
		SELECT p_no FROM product where
		p_Id =#{f_Id}
		<if test="keyword != null">
			<include refid="pageSearch1"></include>
		</if>
		ORDER BY p_no desc)
		LIMIT #{skip},#{amount}
	</select>


	<select id="myOrderCount" resultType="int">
		SELECT COUNT(*) FROM payment WHERE pay_No in (select p_no from
		product
		where p_id = #{f_Id})
		<if test="keyword != null">
			<include refid="pageSearch1"></include>
		</if>
	</select>
	
	<select id="fDelDate"
		resultType="kr.co.everyfarm.payment.PaymentBean">
		SELECT pay_Date FROM payment WHERE pay_No in (select p_no from
		product where p_id =#{f_Id}) order by pay_Date desc limit 1
	</select>
	
	<update id="upPwFar">
		UPDATE farmer SET
		m_Pw = #{m_Pw}
		where m_id=#{m_Id}
	</update>

	<update id="upAddr">
		UPDATE farmer SET
		m_Addr = #{m_Addr}
		where m_id=#{m_Id}
	</update>

	<update id="upName">
		UPDATE farmer SET
		f_Name = #{f_Name}
		where m_id=#{f_Id}
	</update>

	<update id="upTel">UPDATE farmer SET f_Tel = #{f_Tel}where f_id= #{f_Id}
	</update>
	
	<select id="myReply" resultType="kr.co.everyfarm.board.ReviewReplyBean">
		SELECT * FROM r_reply WHERE rep_Id = #{f_Id}
	</select>
	
	<select id="myProdcutReply" resultType="kr.co.everyfarm.product.ProductqnaBean">
		SELECT * FROM productqna WHERE c_Id = #{f_Id} 
	</select>
	
	
	<!-- 차트 -->
	<select id="searchPno" resultType="kr.co.everyfarm.payment.PaymentBean">
		select p_no as pay_no from product where p_Id=#{f_Id}
	</select>
	
	<select id="seedSum" resultType="kr.co.everyfarm.payment.PaymentBean"> 
		select ifnull(pay_seed,0) as pay_seed, ifnull(sum(pay_land),0) as pay_land from payment where (pay_date BETWEEN DATE_ADD(NOW(),INTERVAL -1 WEEK) AND NOW())
		and pay_seed =#{pay_Seed} and pay_no=#{pay_No}
		
	</select>
</mapper>